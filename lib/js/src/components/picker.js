// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var ReasonReact           = require("reason-react/lib/js/src/reasonReact.js");
var Js_undefined          = require("bs-platform/lib/js/js_undefined.js");
var ReactNative           = require("react-native");
var Props$BsReactNative   = require("../private/props.js");
var UtilsRN$BsReactNative = require("../private/utilsRN.js");

function make(color, label, value, testID) {
  var partial_arg = {
    label: Js_undefined.from_opt(label),
    value: Js_undefined.from_opt(value),
    color: Js_undefined.from_opt(color),
    testID: Js_undefined.from_opt(testID)
  };
  var partial_arg$1 = ReactNative.Picker.Item;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

var Item = /* module */[/* make */make];

function encodeMode(x) {
  if (x >= 825427144) {
    return "dialog";
  } else {
    return "dropdown";
  }
}

function make$1(onValueChange, selectedValue, enabled, mode, prompt, itemStyle, accessibilityLabel, accessible, hitSlop, onAccessibilityTap, onLayout, onMagicTap, responderHandlers, pointerEvents, removeClippedSubviews, style, testID, accessibilityComponentType, accessibilityLiveRegion, collapsable, importantForAccessibility, needsOffscreenAlphaCompositing, renderToHardwareTextureAndroid, accessibilityTraits, accessibilityViewIsModal, shouldRasterizeIOS) {
  var partial_arg = Props$BsReactNative.extendView(accessibilityLabel, accessible, hitSlop, onAccessibilityTap, onLayout, onMagicTap, responderHandlers, pointerEvents, removeClippedSubviews, style, testID, accessibilityComponentType, accessibilityLiveRegion, collapsable, importantForAccessibility, needsOffscreenAlphaCompositing, renderToHardwareTextureAndroid, accessibilityTraits, accessibilityViewIsModal, shouldRasterizeIOS, {
        enabled: Js_undefined.from_opt(UtilsRN$BsReactNative.optBoolToOptJsBoolean(enabled)),
        onValueChange: Js_undefined.from_opt(onValueChange),
        selectedValue: Js_undefined.from_opt(selectedValue),
        itemStyle: Js_undefined.from_opt(itemStyle),
        prompt: Js_undefined.from_opt(prompt),
        mode: Js_undefined.from_opt(UtilsRN$BsReactNative.option_map(encodeMode, mode))
      });
  var partial_arg$1 = ReactNative.Picker;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

exports.Item = Item;
exports.make = make$1;
/* ReasonReact Not a pure module */
