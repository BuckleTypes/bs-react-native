// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var ReactNative = require("react-native");
var Props$BsReactNative = require("../private/props.js");

function convertImageSource(src) {
  if (src[0] >= 4245324) {
    return src[1];
  } else {
    return $$Array.of_list(src[1]);
  }
}

function make(disabled, maximumTrackTintColor, maximumValue, minimumTrackTintColor, minimumValue, onSlidingComplete, onValueChange, step, value, thumbTintColor, maximumTrackImage, minimumTrackImage, thumbImage, trackImage, accessibilityLabel, accessible, hitSlop, onAccessibilityTap, onLayout, onMagicTap, responderHandlers, pointerEvents, removeClippedSubviews, style, testID, accessibilityComponentType, accessibilityLiveRegion, collapsable, importantForAccessibility, needsOffscreenAlphaCompositing, renderToHardwareTextureAndroid, accessibilityTraits, accessibilityViewIsModal, shouldRasterizeIOS) {
  var partial_arg = Props$BsReactNative.extendView(accessibilityLabel, accessible, hitSlop, onAccessibilityTap, onLayout, onMagicTap, responderHandlers, pointerEvents, removeClippedSubviews, style, testID, accessibilityComponentType, accessibilityLiveRegion, collapsable, importantForAccessibility, needsOffscreenAlphaCompositing, renderToHardwareTextureAndroid, accessibilityTraits, accessibilityViewIsModal, shouldRasterizeIOS, {
        disabled: disabled,
        maximumTrackTintColor: maximumTrackTintColor,
        maximumValue: maximumValue,
        minimumTrackTintColor: minimumTrackTintColor,
        minimumValue: minimumValue,
        onSlidingComplete: onSlidingComplete,
        onValueChange: onValueChange,
        step: step,
        value: value,
        thumbTintColor: thumbTintColor,
        maximumTrackImage: Belt_Option.map(maximumTrackImage, convertImageSource),
        minimumTrackImage: Belt_Option.map(minimumTrackImage, convertImageSource),
        thumbImage: Belt_Option.map(thumbImage, convertImageSource),
        trackImage: Belt_Option.map(trackImage, convertImageSource)
      });
  var partial_arg$1 = ReactNative.Slider;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

exports.make = make;
/* ReasonReact Not a pure module */
