// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var ReactNative = require("react-native");
var Types$BsReactNative = require("../types.js");

function make(accessible, accessibilityLabel, accessibilityComponentType, accessibilityTraits, delayLongPress, delayPressIn, delayPressOut, disabled, hitSlop, style, onLayout, onPress, onLongPress, onPressIn, onPressOut, pressRetentionOffset, activeOpacity, focusedOpacity, testID, tvParallaxProperties) {
  var partial_arg = {
    accessible: accessible,
    accessibilityLabel: accessibilityLabel,
    delayLongPress: delayLongPress,
    delayPressIn: delayPressIn,
    delayPressOut: delayPressOut,
    disabled: disabled,
    hitSlop: hitSlop,
    style: style,
    onLayout: onLayout,
    onPress: onPress,
    onLongPress: onLongPress,
    onPressIn: onPressIn,
    onPressOut: onPressOut,
    pressRetentionOffset: pressRetentionOffset,
    accessibilityComponentType: Belt_Option.map(accessibilityComponentType, Types$BsReactNative.accessibilityComponentTypeToJs),
    accessibilityTraits: Belt_Option.map(accessibilityTraits, (function (x) {
            return $$Array.of_list(List.map(Types$BsReactNative.accessibilityTraitToJs, x));
          })),
    focusedOpacity: focusedOpacity,
    activeOpacity: activeOpacity,
    testID: testID,
    tvParallaxProperties: tvParallaxProperties
  };
  var partial_arg$1 = ReactNative.TouchableOpacity;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

exports.make = make;
/* ReasonReact Not a pure module */
