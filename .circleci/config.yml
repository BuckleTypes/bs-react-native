aliases:
  # Cache Management
  - &restore-yarn-cache
    keys:
      - v1-yarn-cache-{{ checksum "package.json" }}
      - v1-yarn-cache
  - &save-yarn-cache
    paths:
      - ~/.cache/yarn
    key: v1-yarn-cache-{{ checksum "package.json" }}
  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages

version: 2
jobs:

  # Set up a Node environment for downstream jobs
  checkout_code:
    docker:
      - image: circleci/node:8.0
    steps:
      - checkout
      
      # Install Node.js dependencies
      - restore-cache: *restore-yarn-cache
      - run: yarn
      - save-cache: *save-yarn-cache

      - persist_to_workspace:
          root: .
          paths: .
  
  # Test bs-react-native
  test:
    docker:
      - image: circleci/node:8.0
    steps:
      - attach_workspace:
          at: ~/bs-react-native
      - run:
          name: "Run tests"
          command: |
            yarn build

  # Build documentation
  docs:
    docker:
      - image: circleci/node:8.0
    environment:
      - TERM: dumb
    steps:
      - attach_workspace:
          at: ~/bs-react-native
      - run:
          name: Install opam
          command: |
            wget https://raw.github.com/ocaml/opam/master/shell/opam_installer.sh -O - | sudo sh -s /usr/local/bin
            /usr/local/bin/opam init --compiler 4.02.3+buckle-master && eval $(opam config env)
      - run:
          name: Install dependencies
          command: opam update && opam install -y odoc
      - run:
          name: "Build documentation"
          command: |
            yarn build-docs
      - store_artifacts:
          path: ~/bs-react-native/docs

workflows:
  version: 2
  build-deploy:
    jobs:
      # Checkout repo and run Yarn
      - checkout_code:
          filters: *filter-ignore-gh-pages
      
      # Test
      - test:
          filters: *filter-ignore-gh-pages
          requires:
            - checkout_code

      # Build documentation
      - docs:
          filters: *filter-ignore-gh-pages
          requires:
            - checkout_code
