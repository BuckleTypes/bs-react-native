// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Text$BsReactNative = require("bs-react-native/lib/js/src/components/text.js");
var View$BsReactNative = require("bs-react-native/lib/js/src/components/view.js");
var Style$BsReactNative = require("bs-react-native/lib/js/src/style.js");
var StyleSheet$BsReactNative = require("bs-react-native/lib/js/src/styleSheet.js");
var ImagePickerIOS$BsReactNative = require("bs-react-native/lib/js/src/imagePickerIOS.js");
var TouchableOpacity$BsReactNative = require("bs-react-native/lib/js/src/components/touchableOpacity.js");

var styles = StyleSheet$BsReactNative.create({
      pageStyle: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.flex(1),
            /* :: */[
              Style$BsReactNative.flexGrow(1),
              /* [] */0
            ]
          ]),
      viewPager: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.alignItems(/* Center */2),
            /* :: */[
              Style$BsReactNative.padding(/* Pt */Block.__(0, [20])),
              /* :: */[
                Style$BsReactNative.height(/* Pt */Block.__(0, [400])),
                /* [] */0
              ]
            ]
          ])
    });

var component = ReasonReact.reducerComponent("CanRecordVideosExample");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (param) {
              var send = param[/* send */3];
              return ImagePickerIOS$BsReactNative.canRecordVideos((function () {
                            return Curry._1(send, /* UpdateCanRecordVideos */[true]);
                          }));
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              return ReasonReact.element("1", undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Js_primitive.some(styles.pageStyle), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                              ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Can we record videos?"])),
                              ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[Pervasives.string_of_bool(param[/* state */1][/* canRecordVideos */0])]))
                            ]));
            }),
          /* initialState */(function () {
              return /* record */[/* canRecordVideos */false];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [/* record */[/* canRecordVideos */action[0]]]);
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var CanRecordVideosExample = /* module */[
  /* component */component,
  /* make */make
];

var component$1 = ReasonReact.reducerComponent("CanRecordVideosExample");

function make$1() {
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */(function (param) {
              var send = param[/* send */3];
              return ImagePickerIOS$BsReactNative.canUseCamera((function () {
                            return Curry._1(send, /* UpdateCanUseCamera */[true]);
                          }));
            }),
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function (param) {
              return ReasonReact.element("1", undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Js_primitive.some(styles.pageStyle), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                              ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Can we use camera?"])),
                              ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[Pervasives.string_of_bool(param[/* state */1][/* canUseCamera */0])]))
                            ]));
            }),
          /* initialState */(function () {
              return /* record */[/* canUseCamera */false];
            }),
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [/* record */[/* canUseCamera */action[0]]]);
            }),
          /* subscriptions */component$1[/* subscriptions */13],
          /* jsElementWrapped */component$1[/* jsElementWrapped */14]
        ];
}

var CanUseCameraExample = /* module */[
  /* component */component$1,
  /* make */make$1
];

var component$2 = ReasonReact.reducerComponent("CanRecordVideosExample");

function openCameraDialog(_, _$1) {
  return ImagePickerIOS$BsReactNative.openCameraDialog(false, (function () {
                console.log("Success!");
                return /* () */0;
              }), (function (error) {
                console.log(error);
                return /* () */0;
              }));
}

function make$2() {
  return /* record */[
          /* debugName */component$2[/* debugName */0],
          /* reactClassInternal */component$2[/* reactClassInternal */1],
          /* handedOffState */component$2[/* handedOffState */2],
          /* willReceiveProps */component$2[/* willReceiveProps */3],
          /* didMount */component$2[/* didMount */4],
          /* didUpdate */component$2[/* didUpdate */5],
          /* willUnmount */component$2[/* willUnmount */6],
          /* willUpdate */component$2[/* willUpdate */7],
          /* shouldUpdate */component$2[/* shouldUpdate */8],
          /* render */(function (param) {
              return ReasonReact.element("1", undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Js_primitive.some(styles.pageStyle), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[ReasonReact.element(undefined, undefined, TouchableOpacity$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Curry._1(param[/* handle */0], openCameraDialog), undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["OPEN CAMERA DIALOG"]))]))]));
            }),
          /* initialState */(function () {
              return /* record */[/* canUseCamera */false];
            }),
          /* retainedProps */component$2[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [/* record */[/* canUseCamera */action[0]]]);
            }),
          /* subscriptions */component$2[/* subscriptions */13],
          /* jsElementWrapped */component$2[/* jsElementWrapped */14]
        ];
}

var CameraDialogExample = /* module */[
  /* component */component$2,
  /* openCameraDialog */openCameraDialog,
  /* make */make$2
];

var component$3 = ReasonReact.reducerComponent("CanRecordVideosExample");

function openCameraDialog$1(_, param) {
  var send = param[/* send */3];
  return ImagePickerIOS$BsReactNative.openSelectDialog(true, true, (function (uri) {
                return Curry._1(send, /* UpdateImageUri */[uri]);
              }), (function (error) {
                console.log(error);
                return /* () */0;
              }));
}

function make$3() {
  return /* record */[
          /* debugName */component$3[/* debugName */0],
          /* reactClassInternal */component$3[/* reactClassInternal */1],
          /* handedOffState */component$3[/* handedOffState */2],
          /* willReceiveProps */component$3[/* willReceiveProps */3],
          /* didMount */component$3[/* didMount */4],
          /* didUpdate */component$3[/* didUpdate */5],
          /* willUnmount */component$3[/* willUnmount */6],
          /* willUpdate */component$3[/* willUpdate */7],
          /* shouldUpdate */component$3[/* shouldUpdate */8],
          /* render */(function (param) {
              return ReasonReact.element("1", undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Js_primitive.some(styles.pageStyle), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                              ReasonReact.element(undefined, undefined, TouchableOpacity$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Curry._1(param[/* handle */0], openCameraDialog$1), undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["OPEN SELECT DIALOG"]))])),
                              ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["image Uri:" + param[/* state */1][/* imageUri */0]]))
                            ]));
            }),
          /* initialState */(function () {
              return /* record */[/* imageUri */""];
            }),
          /* retainedProps */component$3[/* retainedProps */11],
          /* reducer */(function (action, _) {
              return /* Update */Block.__(0, [/* record */[/* imageUri */action[0]]]);
            }),
          /* subscriptions */component$3[/* subscriptions */13],
          /* jsElementWrapped */component$3[/* jsElementWrapped */14]
        ];
}

var SelectDialogExample = /* module */[
  /* component */component$3,
  /* openCameraDialog */openCameraDialog$1,
  /* make */make$3
];

var examples = /* array */[
  /* record */[
    /* title */"ImagePickerIOS.canRecordVideos(callback)",
    /* description */undefined,
    /* render */(function () {
        return ReasonReact.element(undefined, undefined, make(/* array */[]));
      })
  ],
  /* record */[
    /* title */"ImagePickerIOS.canUseCamera(callback)",
    /* description */undefined,
    /* render */(function () {
        return ReasonReact.element(undefined, undefined, make$1(/* array */[]));
      })
  ],
  /* record */[
    /* title */"ImagePickerIOS.openCameraDialog(~videoMode, successCallback, cancelCallback)",
    /* description */undefined,
    /* render */(function () {
        return ReasonReact.element(undefined, undefined, make$2(/* array */[]));
      })
  ],
  /* record */[
    /* title */"ImagePickerIOS.openSelectDialog(~showImages, ~showVideos, successCallback, cancelCallback)",
    /* description */undefined,
    /* render */(function () {
        return ReasonReact.element(undefined, undefined, make$3(/* array */[]));
      })
  ]
];

var exampleType = /* Multiple */0;

var displayName = "ImagePickerIOS";

var title = "<ImagePickerIOSExample>";

var description = "ImagePickerIOS API";

exports.exampleType = exampleType;
exports.displayName = displayName;
exports.title = title;
exports.description = description;
exports.styles = styles;
exports.CanRecordVideosExample = CanRecordVideosExample;
exports.CanUseCameraExample = CanUseCameraExample;
exports.CameraDialogExample = CameraDialogExample;
exports.SelectDialogExample = SelectDialogExample;
exports.examples = examples;
/* styles Not a pure module */
